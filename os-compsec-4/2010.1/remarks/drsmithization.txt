2011.05.18.12.34.00

Задача 1. У Луганова там exec-перенаправление используется, за это, скорее
всего два плюсика. У Вас же решение стандартное. Awk, diff и прочее - это,
конечно, замечательно, но первая задача вообще-то была на тему сопроцессов.
Вот если вы своё решение средствами Bash переработаете с использованием
coproc, то поставлю Вам три плюсика.

Задача 2. Нужно выводить pid и gpid у процесса, во время получения сигнала.
Остальные параметры - по желанию, но, конечно, дополнительный + за то, что
вы их обрабатываете. Но printf в обработчике сигнала, цикл вечного ожидания,
ненадёжный флаг для выхода - to_exit, вызов из test.sh gcc в апострофах -
за всё это минусы. Мы же обсуждали, как это надо делать. Хотя бы sigpause 
использовали.

Задача 4.(-1). Неплохо, но есть существенные недочёты. Во-первых, нужно увидеть
в man read то, что в случае достижения конца файла возвращается 0, нет смысла
продолжать его читать.

Во-вторых, если я напишу так:

	(echo 123 && sleep 1h) | ./descriptors 0 4 4<test.sh

то программа ведёт себя мистически.

	1. Почему-то она прекращает работу с 0 дескриптором после таймаута.
	А если бы я написал нечто такое:

		echo 123 && sleep 1h && echo 456
	
	это же вполне нормальное поведение, для медленного ползователя,
	который данные выдаёт с большим интервалом. А мы договаривались, что
	программа должна выводить данные, пока они могут быть в потоке. А для
	этого poll должен обрабатывать сразу множество дескрипторов файлов,
	и программа не должна обрываться по таймауту.

	2. Хм... Хорошо, поправьте пока пункт 1, может быть, автоматически и
	это замечание исправлено будет Вами.
