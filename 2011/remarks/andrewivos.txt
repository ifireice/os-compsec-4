2012.01.19.00.34.06

Задание 0. + за .gitignore, но минусы за SortFiles и SortFIles.o

Задание 1. Зачем так усложнять? Программа-то на 50 строчек от силы, а
	у Вас 200. Мне ж читать и проверять приходится. А принцип KISS как же?
	Это не ошибка, формально... Но зачем же так? Зачем tr1-то вам
	понадобился?

	Зачем Вам два варианта исключений, которые, фактически, одинаковые?

	Это тотальный overkill какой-то, а не решение задачи. Чем Вам
	какой-нибудь ifstream не нравится, если он делает то же самое, что
	у Вас напрограммировано? Чего ж Вы тогда vector свой не написали?

	A shared_ptr!? Зачем!? Нет. Такой overkill не пройдёт. Я не могу
	принять такое решение. И почему Вы считаете, что new не может выкинуть
	исключение?

	Кроме того, ну что за catch-throw цепочки? Ну какой в них смысл? Что
	мешает просто пропустить исключение выше? Они же именно для того
	и придуманы, чтобы выплывать на верхний уровень к единой точке
	контроля.

	Нет. Это ужасно. Это тотальный overkill, и я убираю оценку за эту
	задачу. Так нельзя... Я ничуть не сомневаюсь, что Вы великолепно знаете
	и Си, и Си++, но их надо использовать разумно. И оцениваю я не владение
	языком.

	Упрощайте, вычищайте всё лишнее, используйте библиотеки.

Задание 2.

	(1) Вы же читаете данные из образа виртуального диска, кто может
		гарантировать, что там сектора вообще 512-байтные, да ещё и
		расположениы по 512-байтовым границам? Это когда эмулятор образ
		пережуёт, он создаёт такую картину для приложения.

		Вы же всё равно таким способом ничего не оптимизируете, потому
		что с диска, уже в основной OS, файл с образом диска будет
		читаться не по 2-байтным кускам, а секторами целиком.

		У Вас гораздо больше накладных расходов в данном случае от
		того, что вы по этому файлу два раза пробегаете.

	А ещё вопрос (я не специалист по Python), почему у Вас в get_candidates
	используется try, а в основном цикле нет? Ошибки могут вылезти и там,
	и там, ведь.

Задание 3. По-прежнему не работает. Только теперь ассемблер ругается, и
	понятно, почему. Вот конец /tmp/os.asm:

		SectorsToLoad:
		db 0
		OrigCRC: dd 0
		OurCRC: dd 0
		times 510-($-$$) db 0
		db 0x55, 0xaa
		MYFILE: db 
		end2:

	MYFILE пуст.

	Поэтому, пока оценка не меняется. Надо как-то это исправить.

Задание 4.

	(1) Формула в matrix2.c не верная, уже поздно, и я плохо соображаю,
		но вот это:

			(y&PAGE_OFFSET_MASK)<<PAGE_SIZE_LOG

		точно не соответствует y%TY * TX, которым должна быть.
		Пожалуйста, поясните эту формулу подробно в комментариях или
		измените её, чтобы всё стало очевидным.

	P.S. Что ж вы все так пробелы не любите? Люди пишут пробелы, когда
	хотят втиснуть что-нибудь в одну строчку, а в вашей группе, пробелы не
	пишуться, постоянно, зато индентификаторы у всех на десяток символов.
	Какой смысл экономить тогда на спичках? А читаемость кода резко падает
	:(

	Прошу Вас это учесть.

	Какой нехороший человек пропиарил среди вас такой стиль? Покажите мне
	его, я ему напишу гневное послание.

Задание 5. Замечательно.

Задание 7. Ну... Нет. Bochs - это совсем другая история. И мы пишем код,
	который должен работать везде. Поэтому, qemu. Иначе, что это за
	загрузчик, который может работать только в каком-то специальном
	эмуляторе?.. Всё должно быть по-честному.

	(1) Вот же лихие люди в Вашей группы. Вы из обработчика прерываний
		вызываете bad_loop... Это как? А iret где? A pusha зачем?

	(2) А какой у Вас errorcode в Bochs? И прочли ли Вы в документации,
		каким он должен быть?

	(3) Объясните, почему здесь:

		isr_common_stub:
			add esp, 4
			sti
			iret    

		добавляется к esp 4?


2012.01.17.16.26.17

Без изменений

2012.01.17.02.07.48

Без изменений

2012.01.14.01.11.40

Без изменений

2012.01.11.20.36.55

Я так понимаю, в задания 1 - 6 никаких изменений?

Задание 7. Ну... В принципе, видно, что кое-что Вы и самостоятельно делали.
	Наверное, это плюс. Но есть и минусы:

	(1) А почему у Вас в isr_common_stub Вы указатель стека сдвигаете
		только на 4? Посмотрите формат стека при ошибке.

	(2) Вот настраиваете Вы процессор на защищённый режим, а тут Вам
		прилетает прерывание. Бабах - взрыв ядерного реактора, потому
		что в регистрах, которые управляют исполнением, каша. Это
		серьёзный баг, поэтому двойной минус.

	(3) А почему не выводится сообщение о прерывании? Надо бы это дело
		отладить.

2012.01.01.19.19.36

Без изменений.

2011.12.27.19.45.39

Без изменений. Моя вина, что Вы не увидели комментарии к задачам :( Прошу за
это прощения и прощаю, в качестве компенсации минусик за задачу 0.

2011.12.25.18.15.41

Задача 0. Тут, традиционно, минусы за ненужное в хранилище.

	(1) SortFiles/Debug/src/SortFiles.o

Задача 1. Хм. А почему Вы думаете, что Ваша реализация stdio лучше, чем
	в libc? Собственно, Вы сделали то же самое, что сделано для FILE. И
	почему populate названа так? Но это так. Важно, но не критично. Однако,
	есть и куча недочётов:

	(1) Нужно отсортировать содержимое файлов совместно, а не сортировать
		каждый файл отдельно.

	(2) Слишком много глобального контекста у Вас. Ладно, если бы было
		2-3 структуры, а у Вас куча переменных, не особо понятно, как
		связанных.
	
	(3) И почему предполагается, что open, или malloc, или fprintf, или
		fclose отработают без ошибок?

Задача 2. В приниципе, не плохо. Но:

	(1) A почему предполагается, что сектор в образе диска обязательно
		должен быть на границе в 512 байтов? Всяко разно может быть.

Задача 3. Вроде как, всё правильно, но не работает почему-то. Или я не
	понимаю, как она должна работать. Кажется, это Вы спрашивали про CRC32?
	Так вот вопрос, а какое CRC32 используется в Python? CRC32 бывают
	разные, с расчётом на разные порядки битов, с разными многочленами,
	и с "вычитанием -1" в конце. Нужно знать, какой имнно используется
	в Python, чтобы реализовать точно такой же.

	Плюс, наверное, поставлю, но и минус за то, что не работает.

Задача 4. Хорошо. Дополнительный + за GET_ADDR (но вернее было бы назвать это
	OFFSET). Но и минус:

	(1) Зачем столько магических чисел? Что такое 0x3f или 0xffffc0? А
		что если система не 32-битная? И почему 6?

Задача 5. Тоже неплохо. Но, ведь:

	(1) Нужно же сделать так, чтобы функция для печати вызывалась из
		кода на ассемблере.

Задача 6. Прочтите, пожалуйста, про опции для компилятора и линковщика у
	remarks/evelinka.txt
