Задача 5. Объясните, пожалуйста, странный файл 1.bat. Почему так запускается тест?

Задача 3. Имеется в виду загрузка по другому адресу, а не переименование метки адреса. Загрузите строчку, допустим, по адресу 66560 от начала памяти.

Задача 2. Снова - не понятно. Зачем так сложно всё? Кроме того, неверно Вы проверяете формат. Если хотите проверить, что формат не верный, нужно писать fscanf() != 1 (1 от того, что Вы читаете одно поле). fscanf может и -1 вернуть при ошибке чтения и тогда у Вас будет вечный цикл.

Ошибка чтения у Вас не учитывается никак.

Далее не понятно, почему error_code меняется только в случае успешного вывода сообщения об ошибке. Терминал тоже может быть закрыт, и вывод может завершиться с ошибкой, но код возврата, сигналящий об ошибочной ситуации тоже должен возвращаться. Кроме того, проверка !printf не верная. При ошибке printf возвращает -1.

--

Задача 2. Не понятно, куда в итоге уходит поток информации в error_code. Например, при realloc Вы узнаёте, что с памятью проблема, а потом, всё равно, продолжаете цикл. Надо как-то в if'ах это учесть, в while'ах, или навставлять break'ов правильно.

Задача 3. Ух. Такое решение много раз было. Давайте немного его изменим. Загрузите, пожалуйста, строку, которую Вы выводите в другую область памяти, не по адресу hello.

Задача 4.

2011.05.18.17.22.05

Задача 5. Я запускаю вот так вот:

	$ gcc -O3 arrays.c -o arr && ./arr && cat result.txt 
	1st method: 0.00
	2nd method: 0.00

Почему времена получаются нулевые?

Задача 6. А аффинность? pthread_setaffinity_np. Без неё нельзя гарантировать,
что нити запустятся на разных ядрах.

Аа. У Вас в папке 7 верное решение задачи 6.

2011.05.24.18.41.57

Задача 7. Зачем же так сложно получать pid процесса? Есть же pidof.
