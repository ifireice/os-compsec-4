Крайний срок: 26.03.2012

Условие задачи немного изменилось, не в сторону усложнения, а в сторону
интересности.

Необходимо сделать утилиту для подсматривания за рабочим столом удалённой
машины (пусть это машина RM).

Для этого нужно проделать несколько дел.

1. Настроить доступ по ключам через SSH к RM. Для этого необходимо сформировать
	ключи (см. man ssh-keygen, в котором всё описано, в утилите man работает
	поиск, вызываемый через /).

2. Получить видеопоток с изображением рабочего стола. Этого можно добиться
	при помощи ffmpeg, для которого необходимо назначить источником видео
	некоторый дисплей и экран X-Windows. Это делается при помощи следующих
	опций:

		ffplay -f x11grab -r $FR -s ${X}x{Y} -i $hostname:$D.$S

	Здесь. FR - это частота получения кадров (frame rate). D - это номер
	дисплея, а S - номер экрана на машине hostname. Если hostname пустой,
	то предполагается, что это дисплей на локальной машине, работающий
	через специальный локальный протокол. Размер считываемой области
	будет равен XxY

	В Вашей утилите должна быть возможность через аргументы командной
	строки задать FR, X, Y, D, S. По-умолчанию, эти параметры должны быть
	установлены следующим образом:

		FR=10
		D=0
		S=0
		X={ширина экрана :D.S}
		Y={высота экрана :D.S}

	Высоту и ширину экрана можно узнать при помощи утилиты xwininfo.
	В X-Window существует концепция корневого окна, размером равного
	разрешению экрана. xwininfo нужна информация из переменной окружения
	DISPLAY, чтобы знать, с каким экраном работать. Установить её и
	распространить на последующие команды можно комбинацией указаний для
	оболочки:

		DISPLAY=$hostname:$D.$S
		export DISPLAY
	
	Размер экрана можно извлечь из результата команды:

		xwininfo -root

	при помощи утилиты awk:

		awk '/^.*-geometry.*/ {
			match($2, "^[0-9]+x");
			print(substr($2, RSTART, RLENGTH-1));
			match($2, "x[0-9]+\\+");
			print(substr($2, RSTART+1, RLENGTH-2)) }'

	Тут всё прямолинейно, но можете посмотреть man awk, чтобы разобраться,
	о чём идёт речь. Я специально рекомендую awk, а не perl или другой
	язык, чтобы познакомить Вас с классикой UNIX.

	Результат выдаваемый конвейером из xwininfo и awk можно загрузить в
	адресное пространство скрипта при помощи команды read и перенаправления
	<( ... ):
		
		read X Y <( ... )
	
	или при помощи формирования массива:

		array=($( ... ))

	Понятно, что все эти радости необходимо выполнять на удалённой машине и
	ssh поможет Вам это сделать:

		ssh remote.host.addr <<EOS
			...
			ffmpeg ... -f FORMAT pipe:
		EOS

	<<EOS - это некий способ описания содержимого, направляемого на stdin
	команды после её запуска (См. man bash). SSH запустит на удалённой
	машине оболочку и команды пойдут прямо в неё.

	Подходящий FORMAT вам следует выбрать из списка, выдаваемого командой

		ffmpeg -formats

3. Нужно отправить видеопоток, полученный с удалённой машины в ffplay

В хранилище следует добавить решение, содержащие:

	1. Директорию .ssh на удалённой машине (без секретных ключей, если Вы
		их там создавали); просто скопируйте её в директорию с решением.

	2. Bash-скрипт, который настраивает и запускает ffmpeg на удалённой
		машине, связывая его с ffplay, запущенным локально через pipe.

НЕ ЗАБЫВАЙТЕ ПРО ОБРАБОТКУ ОШИБОК. Любое из действий может завершится неудачно.
Посмотрите man set (ключ -e).
